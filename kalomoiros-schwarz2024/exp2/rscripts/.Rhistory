t$ps = ifelse(t$expression %in% noPs, "noPs",
ifelse(t$expression %in% ps, "ps", "other"))
table(t$ps)
table(nat.meansEIC$ps, nat.meansEIC$expression)
text.color <- ifelse(nat.meansEIC$expression[order(nat.meansEIC$Mean)] %in% ps, '#D55E00',
ifelse(nat.meansEIC$expression[order(nat.meansEIC$Mean)] %in% noPs, "black", "#009E73"))
text.color
t$expression = factor(t$expression, levels = nat.meansEIC$expression[order(nat.meansEIC$Mean)], ordered = TRUE)
# plot of naturalness means, with participants' individual responses
ggplot(nat.meansEIC, aes(x=expression, y=Mean)) +
geom_violin(data=t[t$context == "ExplicitIgnoranceP",],aes(x=expression, y=Answer),
scale="width",color="gray80", fill = "gray80") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(aes(group = ps, fill = ps), shape=21,stroke=.5,size=3, color="black") +
scale_fill_manual(values=c('black','#D55E00')) +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels = c("0","1"")) +
guides(fill=FALSE) +
theme(legend.position="top", panel.grid.major.x = element_blank()) +
ylab("Mean naturalness rating \n in explicit ignorance context") +
xlab("Expression") +
#theme_dark() +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1, color = text.color))
ggsave("../graphs/explicit-ignorance-naturalness-by-expression.pdf",height=3,width=6)
# calculate mean naturalness rating by trigger and context
nat.means = results %>%
group_by(trigger,context) %>%
summarize(Mean = mean(Answer), CILow = ci.low(Answer), CIHigh = ci.high(Answer)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh) %>%
ungroup %>%
select(-c(CILow,CIHigh)) %>%
mutate(context = as.factor(context))
nat.means
table(nat.means$context)
nat.means$trigger <- as.factor(nat.means$trigger)
levels(nat.means$trigger)
# order predicates by mean naturalness rating in EIC
tmp <- results %>%
filter(context == "ExplicitIgnoranceP") %>%
group_by(trigger) %>%
summarize(Mean = mean(Answer)) %>%
mutate(expression = fct_reorder(as.factor(trigger),Mean))
tmp
levels(tmp$expression)
# order predicates by mean difference in EIC and Support context
# because the claim by Mandelkern et al is that this is how ps differ from non-ps
tmp.EIC <- results %>%
filter(context == "ExplicitIgnoranceP") %>%
group_by(trigger) %>%
summarize(Mean.EIC = mean(Answer))
tmp.EIC
tmp.SUP <- results %>%
filter(context == "SupportP") %>%
group_by(trigger) %>%
summarize(Mean.SUP = mean(Answer))
tmp.SUP
tmp = left_join(tmp.EIC,tmp.SUP)
tmp
tmp$Diff = tmp$Mean.EIC-tmp$Mean.SUP
tmp
tmp = tmp %>%
mutate(expression = fct_reorder(as.factor(trigger),Diff))
tmp
# now order expressions based on tmp (two options above)
levels(tmp$expression)
nat.means$trigger = factor(nat.means$trigger, levels=tmp$expression[order(tmp$expression)], ordered=TRUE)
results$trigger = factor(results$trigger, levels=tmp$expression[order(tmp$expression)], ordered=TRUE)
levels(nat.means$trigger)
levels(results$trigger)
# order the contexts
levels(nat.means$context)
nat.means$context = factor(nat.means$context, levels = c("ExplicitIgnoranceP", "SupportP"))
fill.color <- ifelse(levels(nat.means$trigger) %in% ps, '#D55E00', "black")
fill.color
# to color the facets differently
library(ggh4x)
strip <- strip_themed(background_x = elem_list_rect(fill = fill.color))
nat.means
# violinplot
ggplot() +
geom_violin(data=results, aes(x=context, y=Answer, fill = context), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'support')) +
scale_x_discrete(breaks = NULL) +
#scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
guides(linetype = "none") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ trigger, nrow = 1, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "white"))
ggsave("../graphs/naturalness-by-context-and-expression.pdf",height=3,width=9)
nat.means
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
# load required packages
library(tidyverse)
library(ggrepel)
library(dichromat)
library(forcats)
library(ggrepel)
# color-blind-friendly palette
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
theme_set(theme_bw())
# load helper functions
source('../../helpers.R')
# load cleaned data
d = read_tsv("../data/cd.tsv")
names(d)
table(d$context)
length(unique(d$participantID)) #370 participants
# target data: explicit ignorance context
table(d$expression)
t = d %>%
filter(context == "explicitIgnorance") %>%
mutate(expression = recode(expression, "controlGood1" = "controls", "controlGood2" = "controls")) %>%
filter(expression != "controls")
# calculate mean naturalness rating by expression, including the fillers, in explicit ignorance context
nat.meansEIC = t %>%
group_by(expression) %>%
summarize(Mean = mean(response), CILow = ci.low(response), CIHigh = ci.high(response)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh, expression = fct_reorder(as.factor(expression),Mean))
nat.meansEIC
levels(nat.meansEIC$expression)
# color code the expressions
factives <- c("know", "discover", "be annoyed", "reveal", "see")
fillers <- c("too", "also","cleft","again","stop", "continue")
nat.meansEIC$ps = ifelse(nat.meansEIC$expression %in% fillers, "filler",
ifelse(nat.meansEIC$expression %in% factives, "factive", "other"))
t$ps = ifelse(t$expression %in% fillers, "filler",
ifelse(t$expression %in% factives, "factive", "other"))
text.color <- ifelse(nat.meansEIC$expression[order(nat.meansEIC$Mean)] %in% factives, '#D55E00',
ifelse(nat.meansEIC$expression[order(nat.meansEIC$Mean)] %in% fillers, "gray80", "black"))
text.color
t$expression = factor(t$expression, levels = nat.meansEIC$expression[order(nat.meansEIC$Mean)], ordered = TRUE)
# plot of naturalness means, with participants' individual responses
ggplot(nat.meansEIC, aes(x=expression, y=Mean)) +
geom_violin(data=t[t$context == "explicitIgnorance",],aes(x=expression, y=response),
scale="width",color="gray80", fill = "gray80") +
geom_point(aes(group = ps, fill = ps), shape=21,stroke=.5,size=3, color="black") +
scale_fill_manual(values=c('#D55E00','black','#009E73')) +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
guides(fill=FALSE) +
theme(legend.position="top", panel.grid.major.x = element_blank()) +
ylab("Mean naturalness rating \n in explicit ignorance context") +
xlab("Expression") +
#theme_dark() +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1, color = text.color))
# plot of naturalness means, with participants' individual responses
ggplot(nat.meansEIC, aes(x=expression, y=Mean)) +
geom_violin(data=t[t$context == "explicitIgnorance",],aes(x=expression, y=response),
scale="width",color="gray80", fill = "gray80") +
geom_point(aes(group = ps, fill = ps), shape=21,stroke=.5,size=3, color="black") +
scale_fill_manual(values=c('#D55E00','gray80','black')) +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
guides(fill=FALSE) +
theme(legend.position="top", panel.grid.major.x = element_blank()) +
ylab("Mean naturalness rating \n in explicit ignorance context") +
xlab("Expression") +
#theme_dark() +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1, color = text.color))
ggsave("../graphs/explicit-ignorance-naturalness-by-predicate.pdf",height=4,width=7)
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load libraries
# library(plyr)
library(lme4)
library(lmerTest)
# library(ggplot2)
library(tidyverse)
# load helpers
source('../../../results/helpers.R')
# set theme
theme_set(theme_bw())
# load data
results <- read.csv("../data/resultsExp1.csv")
#view(results)
table(results$Condition)
# filter to data of interest (Support = support simple ps, SimplePs = explicit ignorance simple ps)
d = results %>%
filter(Condition == "Support" | Condition == "SimplePs") %>%
droplevels()
table(d$Condition)
# recode Value from 1-7 to 0-6 to compare to Mandelkern et al 2020
table(d$Value)
d$Value = d$Value -1
table(d$Value)
# target data: explicit ignorance context
t = d %>%
filter(Condition == "SimplePs")
nrow(t)
#view(t)
table(t$Trigger)
# calculate mean naturalness rating by expression in explicit ignorance context
nat.meansEIC = t %>%
group_by(Trigger) %>%
summarize(Mean = mean(Value), CILow = ci.low(Value), CIHigh = ci.high(Value)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh, Trigger = fct_reorder(as.factor(Trigger),Mean))
nat.meansEIC
levels(nat.meansEIC$Trigger)
# color code the expressions
ps <- c("again","continue","happy","find out","aware","stop")
noPs <- c()
nat.meansEIC$ps = ifelse(nat.meansEIC$Trigger %in% noPs, "noPs",
ifelse(nat.meansEIC$Trigger %in% ps, "ps", "other"))
table(nat.meansEIC$ps)
t$expression = t$Trigger
t$ps = ifelse(t$expression %in% noPs, "noPs",
ifelse(t$expression %in% ps, "ps", "other"))
table(t$ps)
table(nat.meansEIC$ps, nat.meansEIC$Trigger)
text.color <- ifelse(nat.meansEIC$Trigger[order(nat.meansEIC$Mean)] %in% ps, '#D55E00',
ifelse(nat.meansEIC$Trigger[order(nat.meansEIC$Mean)] %in% noPs, "black", "#009E73"))
text.color
t$expression = factor(t$expression, levels = nat.meansEIC$Trigger[order(nat.meansEIC$Mean)], ordered = TRUE)
# plot of naturalness means, with participants' individual responses
ggplot(nat.meansEIC, aes(x=Trigger, y=Mean)) +
geom_violin(data=t[t$Condition == "SimplePs",],aes(x=Trigger, y=Value),
scale="width",color="gray80", fill = "gray80") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(aes(group = ps, fill = ps), shape=21,stroke=.5,size=3, color="black") +
scale_fill_manual(values=c('black','#D55E00')) +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels = c("0","1"")) +
guides(fill=FALSE) +
theme(legend.position="top", panel.grid.major.x = element_blank()) +
ylab("Mean naturalness rating \n in explicit ignorance context") +
xlab("Expression") +
#theme_dark() +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1, color = text.color))
ggsave("../graphs/explicit-ignorance-naturalness-by-expression.pdf",height=3,width=6)
# calculate mean naturalness rating by trigger and context
nat.means = d %>%
group_by(Trigger,Condition) %>%
summarize(Mean = mean(Value), CILow = ci.low(Value), CIHigh = ci.high(Value)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh) %>%
ungroup %>%
select(-c(CILow,CIHigh)) %>%
mutate(Condition = as.factor(Condition))
nat.means
table(nat.means$Condition)
nat.means$Trigger <- as.factor(nat.means$Trigger)
levels(nat.means$Trigger)
# order predicates by mean naturalness rating in EIC
tmp <- d %>%
filter(Condition == "SimplePs") %>%
group_by(Trigger) %>%
summarize(Mean = mean(Value)) %>%
mutate(Trigger = fct_reorder(as.factor(Trigger),Mean))
tmp
levels(tmp$Trigger)
# order predicates by mean difference in EIC and Support context
# because the claim by Mandelkern et al is that this is how ps differ from non-ps
tmp.EIC <- d %>%
filter(Condition == "SimplePs") %>%
group_by(Trigger) %>%
summarize(Mean.EIC = mean(Value))
tmp.EIC
tmp.SUP <- d %>%
filter(Condition == "Support") %>%
group_by(Trigger) %>%
summarize(Mean.SUP = mean(Value))
tmp.SUP
tmp = left_join(tmp.EIC,tmp.SUP)
tmp
tmp$Diff = tmp$Mean.EIC-tmp$Mean.SUP
tmp
tmp = tmp %>%
mutate(Trigger = fct_reorder(as.factor(Trigger),Diff))
tmp
# now order expressions based on tmp (two options above)
levels(tmp$Trigger)
nat.means$Trigger = factor(nat.means$Trigger, levels=tmp$Trigger[order(tmp$Trigger)], ordered=TRUE)
d$Trigger = factor(d$Trigger, levels=tmp$Trigger[order(tmp$Trigger)], ordered=TRUE)
levels(nat.means$Trigger)
levels(d$Trigger)
# order the contexts
levels(nat.means$Condition)
nat.means$Condition = factor(nat.means$Condition, levels = c("SimplePs", "Support"))
fill.color <- ifelse(levels(nat.means$Trigger) %in% ps, '#D55E00', "black")
fill.color
# to color the facets differently
library(ggh4x)
strip <- strip_themed(background_x = elem_list_rect(fill = fill.color))
nat.means
# violinplot
ggplot() +
geom_violin(data=d, aes(x=Condition, y=Value, fill = Condition), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=Condition, y=Mean, fill = Condition), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=Condition,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'support')) +
scale_x_discrete(breaks = NULL) +
#scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
guides(linetype = "none") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ Trigger, nrow = 1, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "white"))
ggsave("../graphs/naturalness-by-context-and-expression.pdf",height=3,width=9)
# calculate mean naturalness rating by context
nat.means = d %>%
group_by(Condition) %>%
summarize(Mean = mean(Value), CILow = ci.low(Value), CIHigh = ci.high(Value)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh) %>%
ungroup %>%
select(-c(CILow,CIHigh)) %>%
mutate(Condition = as.factor(Condition))
nat.means
table(nat.means$Condition)
nat.means$Trigger <- as.factor(nat.means$Trigger)
levels(nat.means$Trigger)
# calculate mean naturalness rating by context
nat.means = d %>%
group_by(Condition) %>%
summarize(Mean = mean(Value), CILow = ci.low(Value), CIHigh = ci.high(Value)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh) %>%
ungroup %>%
select(-c(CILow,CIHigh)) %>%
mutate(Condition = as.factor(Condition))
nat.means
table(nat.means$Condition)
# order the contexts
levels(nat.means$Condition)
nat.means$Condition = factor(nat.means$Condition, levels = c("SimplePs", "Support"))
# violinplot
ggplot() +
geom_violin(data=d, aes(x=Condition, y=Value, fill = Condition), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=Condition, y=Mean, fill = Condition), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=Condition,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'support')) +
scale_x_discrete(breaks = NULL) +
#scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
guides(linetype = "none") +
ylab("Mean naturalness rating") +
xlab("Context")
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
theme_set(theme_bw())
# load libraries
#```{r Data import, message=FALSE, warning=FALSE, linewidth=20}
library(tidyverse)
resultsCONJPs <- read.csv("https://159d3d98-11fc-4642-8e29-43c994fa07d0.usrfiles.com/ugd/159d3d_2f0abc5ea2284053ba89b24fe8b72cee.csv")
resultsCONJNoPs <- read.csv("https://159d3d98-11fc-4642-8e29-43c994fa07d0.usrfiles.com/ugd/159d3d_13a280890ffb4013b862d92f83bb240c.csv")
resultsDISJPs <- read.csv("https://159d3d98-11fc-4642-8e29-43c994fa07d0.usrfiles.com/ugd/159d3d_f9d3c9bf402e4065b333c17291788436.csv")
resultsDISJNoPs <- read.csv("https://159d3d98-11fc-4642-8e29-43c994fa07d0.usrfiles.com/ugd/159d3d_f9041e82b68c4ed8b5f5f9072ca28b4a.csv")
#```{r, warning = FALSE, message = FALSE}
resultsCONJ <- rbind(resultsCONJPs, resultsCONJNoPs)
resultsDISJ <- rbind(resultsDISJPs, resultsDISJNoPs)
results <- rbind(resultsCONJ, resultsDISJ)
#```{r, warning = FALSE, message = FALSE}
check <- results %>%
filter(`Item` != "ID", Condition != "Filler")%>%
group_by(Condition) %>%
dplyr::summarise(Count = n())
check
#```{r, warning = FALSE, message = FALSE}
check2 <- results %>%
group_by(ID)%>%
dplyr::summarise(count = n())
check2
resultsCONJ$Value <- as.numeric(as.character(resultsCONJ$Value))
resultsDISJ$Value <- as.numeric(as.character(resultsDISJ$Value))
results$Value <- as.numeric(as.character(results$Value))
table(results$Value) # values from 1-9
# turn into values from 0-8 for better comparison with Mandelkern et al 2020
table(results$Value)
results$Value = results$Value -1
table(results$Value)
resultsCrit <- results %>%
filter(Condition != "Filler") %>%
mutate(Condition = factor(Condition, c("PsFirst", "PsSecond","NoPsFirst", "NoPsSecond", "EISimplePs", "SSimplePs")))
d = resultsCrit %>%
filter(Condition == "EISimplePs" | Condition == "SSimplePs") %>%
droplevels()
# target data: explicit ignorance context
t = d %>%
filter(Condition == "EISimplePs")
nrow(t)
#view(t)
table(t$Trigger)
# calculate mean naturalness rating by expression in explicit ignorance context
nat.meansEIC = t %>%
group_by(Trigger) %>%
summarize(Mean = mean(Value), CILow = ci.low(Value), CIHigh = ci.high(Value)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh, Trigger = fct_reorder(as.factor(Trigger),Mean))
nat.meansEIC
levels(nat.meansEIC$Trigger)
# color code the expressions
ps <- c("again","continue","happy","find out","aware","stop")
noPs <- c()
nat.meansEIC$ps = ifelse(nat.meansEIC$Trigger %in% noPs, "noPs",
ifelse(nat.meansEIC$Trigger %in% ps, "ps", "other"))
table(nat.meansEIC$ps)
t$expression = t$Trigger
t$ps = ifelse(t$expression %in% noPs, "noPs",
ifelse(t$expression %in% ps, "ps", "other"))
table(t$ps)
table(nat.meansEIC$ps, nat.meansEIC$Trigger)
text.color <- ifelse(nat.meansEIC$Trigger[order(nat.meansEIC$Mean)] %in% ps, '#D55E00',
ifelse(nat.meansEIC$Trigger[order(nat.meansEIC$Mean)] %in% noPs, "black", "#009E73"))
text.color
t$expression = factor(t$expression, levels = nat.meansEIC$Trigger[order(nat.meansEIC$Mean)], ordered = TRUE)
# plot of naturalness means, with participants' individual responses
ggplot(nat.meansEIC, aes(x=Trigger, y=Mean)) +
geom_violin(data=t[t$Condition == "EISimplePs",],aes(x=Trigger, y=Value),
scale="width",color="gray80", fill = "gray80") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(aes(group = ps, fill = ps), shape=21,stroke=.5,size=3, color="black") +
scale_fill_manual(values=c('black','#D55E00')) +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels = c("0","1"")) +
guides(fill=FALSE) +
theme(legend.position="top", panel.grid.major.x = element_blank()) +
ylab("Mean naturalness rating \n in explicit ignorance context") +
xlab("Expression") +
#theme_dark() +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1, color = text.color))
ggsave("../graphs/explicit-ignorance-naturalness-by-expression.pdf",height=3,width=3)
# calculate mean naturalness rating by trigger and context
nat.means = d %>%
group_by(Trigger,Condition) %>%
summarize(Mean = mean(Value), CILow = ci.low(Value), CIHigh = ci.high(Value)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh) %>%
ungroup %>%
select(-c(CILow,CIHigh)) %>%
mutate(Condition = as.factor(Condition))
nat.means
table(nat.means$Condition)
nat.means$Trigger <- as.factor(nat.means$Trigger)
levels(nat.means$Trigger)
# order predicates by mean naturalness rating in EIC
tmp <- d %>%
filter(Condition == "EISimplePs") %>%
group_by(Trigger) %>%
summarize(Mean = mean(Value)) %>%
mutate(Trigger = fct_reorder(as.factor(Trigger),Mean))
tmp
levels(tmp$Trigger)
# order predicates by mean difference in EIC and Support context
# because the claim by Mandelkern et al is that this is how ps differ from non-ps
tmp.EIC <- d %>%
filter(Condition == "EISimplePs") %>%
group_by(Trigger) %>%
summarize(Mean.EIC = mean(Value))
tmp.EIC
tmp.SUP <- d %>%
filter(Condition == "SSimplePs") %>%
group_by(Trigger) %>%
summarize(Mean.SUP = mean(Value))
tmp.SUP
tmp = left_join(tmp.EIC,tmp.SUP)
tmp
tmp$Diff = tmp$Mean.EIC-tmp$Mean.SUP
tmp
tmp = tmp %>%
mutate(Trigger = fct_reorder(as.factor(Trigger),Diff))
tmp
# now order expressions based on tmp (two options above)
levels(tmp$Trigger)
nat.means$Trigger = factor(nat.means$Trigger, levels=tmp$Trigger[order(tmp$Trigger)], ordered=TRUE)
d$Trigger = factor(d$Trigger, levels=tmp$Trigger[order(tmp$Trigger)], ordered=TRUE)
levels(nat.means$Trigger)
levels(d$Trigger)
# order the contexts
levels(nat.means$Condition)
nat.means$Condition = factor(nat.means$Condition, levels = c("EISimplePs", "SSimplePs"))
fill.color <- ifelse(levels(nat.means$Trigger) %in% ps, '#D55E00', "black")
fill.color
# to color the facets differently
library(ggh4x)
strip <- strip_themed(background_x = elem_list_rect(fill = fill.color))
nat.means
# violinplot
ggplot() +
geom_violin(data=d, aes(x=Condition, y=Value, fill = Condition), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=Condition, y=Mean, fill = Condition), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=Condition,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'support')) +
scale_x_discrete(breaks = NULL) +
#scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
guides(linetype = "none") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ Trigger, nrow = 1, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "white"))
ggsave("../graphs/naturalness-by-context-and-expression.pdf",height=3,width=4)
